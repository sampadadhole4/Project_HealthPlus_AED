/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.SupervisorWorkArea;

import Healthplus.E_System;
import Healthplus.Enterprises.Enterprise;
import Healthplus.Enterprises.OldAgeHomeEnterprise;
import Healthplus.SeniorCare.SeniorCare;
import Healthplus.Network.City;
import Healthplus.Network.Country;
import Healthplus.Network.State;
import Healthplus.Org.Senior_Care_Org;
import Healthplus.Org.Org;
import Healthplus.UserAccount.UserAccount;
import Healthplus.WorkQueue.SeniorCareWorkRequest;
import Healthplus.WorkQueue.PostTaskWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


public class ProcessTreatmentWorkRequest_Page extends javax.swing.JPanel {

    /**
     * Creates new form ProcessTreatmentWorkRequest_Page
     */
    private JPanel userProcessContainer;
    private E_System system;
    private UserAccount userAccount;
    private Org organization;
    private Enterprise enterprise;
    private PostTaskWorkRequest request;
    private boolean illness;
   
    public ProcessTreatmentWorkRequest_Page(JPanel userProcessContainer, E_System system, UserAccount userAccount, Org organization, PostTaskWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.userAccount = userAccount;
        this.organization = organization;
        this.request = request;
        populateCountry();
        populateState();
        populateCity();
        populateEnterpriseType();
    }
    
    private void populateCountry() {
        combo_country.removeAllItems();
        for (Country c : system.getNetworkList()) {
            combo_country.addItem(c);
        }
    }

    private void populateState() {
        combo_state.removeAllItems();
        if (combo_country.getSelectedItem() != null) {
            for (Country c : system.getNetworkList()) {
                if (c.equals(combo_country.getSelectedItem())) {
                    for (State s : c.getStateList()) {
                        combo_state.addItem(s);
                    }
                }
            }
        }
    }

    private void populateCity() {
        combo_city.removeAllItems();
        if (combo_state.getSelectedItem() != null) {
            for (Country c : system.getNetworkList()) {
                for (State s : c.getStateList()) {
                    if (s.equals(combo_state.getSelectedItem())) {
                        for (City city : s.getCityList()) {
                            combo_city.addItem(city);
                        }
                    }
                }
            }
        }
    }

    public void populateEnterpriseType() {
        combo_trustname.removeAllItems();
        if (combo_city.getSelectedItem() != null) {
            for (Country c : system.getNetworkList()) {
                for (State s : c.getStateList()) {
                    for (City city : s.getCityList()) {
                        if (city.equals(combo_city.getSelectedItem())) {
                            for (Enterprise e : city.getEnterpriseDirectory().getEnterpriseList()) {
                                if(e.getEnterpriseType().getValue().equals("OldAgeHome")){
                                    combo_trustname.addItem(e);
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_goback = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        label_country = new javax.swing.JLabel();
        combo_country = new javax.swing.JComboBox<>();
        label_state = new javax.swing.JLabel();
        combo_state = new javax.swing.JComboBox<>();
        label_city = new javax.swing.JLabel();
        combo_city = new javax.swing.JComboBox<>();
        label_trustName = new javax.swing.JLabel();
        combo_trustname = new javax.swing.JComboBox();
        label_NameOfPatient = new javax.swing.JLabel();
        text_nameofPatient = new javax.swing.JTextField();
        label_patientillness = new javax.swing.JLabel();
        btn_snedtoseniorcare = new javax.swing.JButton();
        checkbox_illiness = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 226, 208));

        btn_goback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/back-button.png"))); // NOI18N
        btn_goback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gobackActionPerformed(evt);
            }
        });

        lblHeader.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Process Treatment Work Request");

        label_country.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_country.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_country.setText("Country:");

        combo_country.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        combo_country.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_countryActionPerformed(evt);
            }
        });

        label_state.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_state.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_state.setText("State:");

        combo_state.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        combo_state.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_stateActionPerformed(evt);
            }
        });

        label_city.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_city.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_city.setText("City:");

        combo_city.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        combo_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_cityActionPerformed(evt);
            }
        });

        label_trustName.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_trustName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_trustName.setText("Trust Name:");

        combo_trustname.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N

        label_NameOfPatient.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_NameOfPatient.setText("Name of the Patient:");

        text_nameofPatient.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N

        label_patientillness.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_patientillness.setText("Does the patient have illness ? :");

        btn_snedtoseniorcare.setBackground(new java.awt.Color(255, 255, 255));
        btn_snedtoseniorcare.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        btn_snedtoseniorcare.setText("Send to Senior Care");
        btn_snedtoseniorcare.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn_snedtoseniorcare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_snedtoseniorcareActionPerformed(evt);
            }
        });

        txtDescription.setColumns(20);
        txtDescription.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/treatment.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(224, 224, 224)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(label_patientillness)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(label_NameOfPatient)
                                                .addGap(29, 29, 29)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(text_nameofPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(checkbox_illiness)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(265, 265, 265)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(label_country, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(14, 14, 14)
                                                .addComponent(combo_country, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(label_state, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(14, 14, 14)
                                                .addComponent(combo_state, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(label_city, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(14, 14, 14)
                                                .addComponent(combo_city, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(243, 243, 243)
                                        .addComponent(label_trustName, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(combo_trustname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(300, 300, 300)
                                        .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)))
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btn_goback, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1169, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(btn_snedtoseniorcare)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_country, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_state, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_city, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_trustName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_trustname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_nameofPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_NameOfPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_patientillness, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox_illiness))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel3)))
                .addGap(9, 9, 9)
                .addComponent(btn_snedtoseniorcare, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btn_goback, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(292, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_gobackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gobackActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        OngoingProjects_Page opjp = (OngoingProjects_Page) component;
        opjp.populateOngoingProjectsTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btn_gobackActionPerformed

    private void combo_countryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_countryActionPerformed
        // TODO add your handling code here:
        populateState();
    }//GEN-LAST:event_combo_countryActionPerformed

    private void combo_stateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_stateActionPerformed
        // TODO add your handling code here:
        populateCity();
    }//GEN-LAST:event_combo_stateActionPerformed

    private void combo_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_cityActionPerformed
        // TODO add your handling code here:
        populateEnterpriseType();
    }//GEN-LAST:event_combo_cityActionPerformed

    private void btn_snedtoseniorcareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_snedtoseniorcareActionPerformed
        enterprise = (Enterprise) combo_trustname.getSelectedItem();
        String name = text_nameofPatient.getText();
        if(checkbox_illiness.isSelected()){
            illness = true;
        }
        else{
             illness = true;
        }
        
        if(name.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter value name of the senior", "Warning", JOptionPane.WARNING_MESSAGE);
            return;

        }

        // validate text
        String regex = "^[a-z A-Z 0-9 .]+$";
        Pattern namePattern = Pattern.compile(regex);
        Matcher nameMatcher = namePattern.matcher(name);


        if(!nameMatcher.matches()){
            JOptionPane.showMessageDialog(null, "Invalid characters in name", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        request.setWorkDone("Sent to Care");
        request.setStatus("Completed");

        SeniorCareWorkRequest req = new SeniorCareWorkRequest();
        SeniorCare senior = new SeniorCare();
        senior.setName(name);
        senior.setIllness(true);
        senior.setCountry(combo_country.getSelectedItem().toString());
        senior.setState(combo_state.getSelectedItem().toString());
        senior.setCity(combo_city.getSelectedItem().toString());
        senior.setStatus(true);
        req.setSenior(senior);

        for(Org organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof Senior_Care_Org) {
                organization.getWorkQueue().getWorkRequestList().add(req);
            }
        }

        JOptionPane.showMessageDialog(null, "Request successfully sent to SeniorCare", "Information", JOptionPane.INFORMATION_MESSAGE);
        text_nameofPatient.setText("");
        
    }//GEN-LAST:event_btn_snedtoseniorcareActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_goback;
    private javax.swing.JButton btn_snedtoseniorcare;
    private javax.swing.JCheckBox checkbox_illiness;
    private javax.swing.JComboBox<Object> combo_city;
    private javax.swing.JComboBox<Object> combo_country;
    private javax.swing.JComboBox<Object> combo_state;
    private javax.swing.JComboBox combo_trustname;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_NameOfPatient;
    private javax.swing.JLabel label_city;
    private javax.swing.JLabel label_country;
    private javax.swing.JLabel label_patientillness;
    private javax.swing.JLabel label_state;
    private javax.swing.JLabel label_trustName;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JTextField text_nameofPatient;
    private javax.swing.JTextArea txtDescription;
    // End of variables declaration//GEN-END:variables
}
