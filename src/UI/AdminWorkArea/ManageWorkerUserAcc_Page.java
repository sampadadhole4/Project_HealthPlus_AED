/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.AdminWorkArea;

import Healthplus.UserAccount.UserAccount;
import Healthplus.E_System;
import Healthplus.Worker.Worker;
import Healthplus.Enterprises.Enterprise;
import Healthplus.Org.AdminOrg;
import Healthplus.Org.Org;
import Healthplus.Role.Admin;
import Healthplus.Role.Roles;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class ManageWorkerUserAcc_Page extends javax.swing.JPanel {

    /**
     * Creates new form ManageWorkerUserAcc_Page
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private E_System system;
    
    public ManageWorkerUserAcc_Page(JPanel userProcessContainer, Enterprise enterprise, E_System system) {
        initComponents();
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateOrganization();
        populateEmployee();
        populateRole();
        populateTable();
    }

    private void populateOrganization() {
        combo_organozation.removeAllItems();

        for (Org organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (!(organization instanceof AdminOrg)) {
                combo_organozation.addItem(organization);
            }
        }
    }

    private void populateEmployee() {
        combo_employee.removeAllItems();
        Org org = (Org) combo_organozation.getSelectedItem();
        if (org != null) {
            for (Worker employee : org.getEmployeeDirectory().getEmployeeList()) {
                combo_employee.addItem(employee);
            }
        }
    }

    private void populateRole() {
        combo_role.removeAllItems();
        Org org = (Org) combo_organozation.getSelectedItem();
        if (org != null) {
            for (Roles role : org.getSupportedRole()) {
                if (!(role instanceof Admin)) {
                    combo_role.addItem(role);
                }
            }
        }
    }

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblUserAcc.getModel();
        dtm.setRowCount(0);
        for (Org organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                if (!ua.getRole().getName().equals(Roles.RoleType.Applicant.getValue())) {
                    Object row[] = new Object[2];
                    row[0] = ua;
                    row[1] = ua.getRole();
                    dtm.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_backpage = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        tblScrollPane = new javax.swing.JScrollPane();
        tblUserAcc = new javax.swing.JTable();
        btn_deleteEmployee = new javax.swing.JButton();
        combo_organozation = new javax.swing.JComboBox();
        label_organization = new javax.swing.JLabel();
        label_emp = new javax.swing.JLabel();
        combo_employee = new javax.swing.JComboBox();
        combo_role = new javax.swing.JComboBox();
        label_role = new javax.swing.JLabel();
        label_username = new javax.swing.JLabel();
        text_username = new javax.swing.JTextField();
        text_password = new javax.swing.JTextField();
        label_password = new javax.swing.JLabel();
        btn_addacoount = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 242, 225));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_backpage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/backicon.jpeg"))); // NOI18N
        btn_backpage.setMaximumSize(new java.awt.Dimension(200, 212));
        btn_backpage.setMinimumSize(new java.awt.Dimension(2200, 212));
        btn_backpage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backpageActionPerformed(evt);
            }
        });
        add(btn_backpage, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 110, 90));

        lblHeader.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Manage Employee Account");
        add(lblHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 270, 26));

        tblUserAcc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUserAcc.setMinimumSize(new java.awt.Dimension(375, 0));
        tblScrollPane.setViewportView(tblUserAcc);

        add(tblScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 500, 170));

        btn_deleteEmployee.setBackground(new java.awt.Color(255, 255, 255));
        btn_deleteEmployee.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        btn_deleteEmployee.setText("Delete Account");
        btn_deleteEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteEmployeeActionPerformed(evt);
            }
        });
        add(btn_deleteEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 310, -1, -1));

        combo_organozation.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        combo_organozation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_organozation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_organozationActionPerformed(evt);
            }
        });
        add(combo_organozation, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 360, 146, -1));

        label_organization.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_organization.setText("Organization");
        add(label_organization, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, -1, -1));

        label_emp.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_emp.setText("Employee");
        add(label_emp, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 390, 80, -1));

        combo_employee.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        combo_employee.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_employeeActionPerformed(evt);
            }
        });
        add(combo_employee, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 390, 146, -1));

        combo_role.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        combo_role.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(combo_role, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 420, 146, -1));

        label_role.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_role.setText("Role");
        add(label_role, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 420, 61, -1));

        label_username.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_username.setText("User Name");
        add(label_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 450, -1, -1));
        add(text_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 450, 146, -1));
        add(text_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 480, 146, -1));

        label_password.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_password.setText("Password");
        add(label_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 480, 70, -1));

        btn_addacoount.setBackground(new java.awt.Color(255, 255, 255));
        btn_addacoount.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        btn_addacoount.setText("Add Account");
        btn_addacoount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addacoountActionPerformed(evt);
            }
        });
        add(btn_addacoount, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 540, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backpageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backpageActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btn_backpageActionPerformed

    private void btn_deleteEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteEmployeeActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblUserAcc.getSelectedRow();
        if (selectedRow >= 0) {
            int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the user account?", "Warning", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                UserAccount ua = (UserAccount) tblUserAcc.getValueAt(selectedRow, 0);

                if (ua.getRole().getName().equals("Admin Type")) {
                    JOptionPane.showMessageDialog(null, "You are not authorized to delete admin", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                enterprise.getUserAccountDirectory().deleteUserAccount(ua);
                for (Org organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    for (UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount.equals(ua)) {
                            organization.getUserAccountDirectory().deleteUserAccount(ua);
                            break;
                        }
                    }
                }

                populateTable();
                JOptionPane.showMessageDialog(null, "User account deleted successfully", "Warning", JOptionPane.WARNING_MESSAGE);

            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_deleteEmployeeActionPerformed

    private void combo_organozationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_organozationActionPerformed

        populateEmployee();
        populateRole();
    }//GEN-LAST:event_combo_organozationActionPerformed

    private void combo_employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_employeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_employeeActionPerformed

    private void btn_addacoountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addacoountActionPerformed
        // TODO add your handling code here:

        try {
            String userName = text_username.getText();
            String password = text_password.getText();
            Org organization = (Org) combo_organozation.getSelectedItem();
            Worker employee = (Worker) combo_employee.getSelectedItem();
            Roles role = (Roles) combo_role.getSelectedItem();

            if (!userName.equals("") && !password.equals("")) {

                // validate username
                String regex = "^[a-z A-Z]+$";
                Pattern namePattern = Pattern.compile(regex);
                Matcher unameMatcher = namePattern.matcher(userName);

                if (!unameMatcher.matches()) {
                    JOptionPane.showMessageDialog(null, "Invalid characters in user name", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if (password.length() > 10) {
                    JOptionPane.showMessageDialog(null, "Password should not have more than 10 characters", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                } else if (password.length() < 4) {
                    JOptionPane.showMessageDialog(null, "Password should have 4 to 10 characters", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                // check if username is unique
                if (system.getUserAccountDirectory().checkIfUsernameIsUnique(userName)) {
                    if (role.getName() == "Manager Type") {
                        // dont add manager is already exists
                        if (!organization.getUserAccountDirectory().checkIfManagerExists(organization)) {
                            organization.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
                            enterprise.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
                            system.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
                            JOptionPane.showMessageDialog(null, "User account added successfully", "Warning", JOptionPane.WARNING_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, "Manager already already exists", "Info", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } else {
                        organization.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
                        enterprise.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
                        system.getUserAccountDirectory().createUserAccount(userName, password, employee, role);

                        JOptionPane.showMessageDialog(null, "User account added successfully", "Warning", JOptionPane.WARNING_MESSAGE);

                    }

                } else {
                    JOptionPane.showMessageDialog(null, "User name already exists", "Info", JOptionPane.INFORMATION_MESSAGE);
                }

                populateTable();
                text_password.setText("");
                text_username.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Enter values for all field", "Warning", JOptionPane.WARNING_MESSAGE);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Enter values for all field", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_addacoountActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addacoount;
    private javax.swing.JButton btn_backpage;
    private javax.swing.JButton btn_deleteEmployee;
    private javax.swing.JComboBox combo_employee;
    private javax.swing.JComboBox combo_organozation;
    private javax.swing.JComboBox combo_role;
    private javax.swing.JLabel label_emp;
    private javax.swing.JLabel label_organization;
    private javax.swing.JLabel label_password;
    private javax.swing.JLabel label_role;
    private javax.swing.JLabel label_username;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JScrollPane tblScrollPane;
    private javax.swing.JTable tblUserAcc;
    private javax.swing.JTextField text_password;
    private javax.swing.JTextField text_username;
    // End of variables declaration//GEN-END:variables
}
