/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.AdminWorkArea;

import Healthplus.UserAccount.UserAccount;
import Healthplus.E_System;
import Healthplus.Enterprises.Enterprise;
import Healthplus.Job.Job;
import Healthplus.Job.JobDirectory;
import Healthplus.Network.City;
import Healthplus.Network.Country;
import Healthplus.Network.State;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class PublishJobs_Page extends javax.swing.JPanel {

    /**
     * Creates new form PublishJobs_Page
     */
    private JPanel userProcessContainer;
    private JobDirectory jobDirectory;
    private UserAccount userAccount;
    private E_System system;

    public PublishJobs_Page(JPanel userProcessContainer, JobDirectory jobDirectory, UserAccount userAccount, E_System system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.jobDirectory = jobDirectory;
        this.userAccount = userAccount;
        this.system = system;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblJobs.getModel();
        model.setRowCount(0);

        if (jobDirectory != null) {
            for (Job job : jobDirectory.getJobList()) {
                Object[] row = new Object[5];
          
                for (Country c : system.getNetworkList()) {
                    for (State s : c.getStateList()) {
                        for (City city : s.getCityList()) {
                            for (Enterprise e : city.getEnterpriseDirectory().getEnterpriseList()) {
                                for (UserAccount ua : e.getUserAccountDirectory().getUserAccountList()) {
                                    if (userAccount.getUsername().equals(ua.getUsername())) {
                                        if (e.equals(job.getEnterprise())) {
                                            row[0] = c;
                                            row[1] = s;
                                            row[2] = city;
                                            row[3] = job.getEnterprise();
                                            row[4] = job;
                                            model.addRow(row);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_backpage = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        tblScrollPane = new javax.swing.JScrollPane();
        tblJobs = new javax.swing.JTable();
        btn_deletejobs = new javax.swing.JButton();
        label_jobtitle = new javax.swing.JLabel();
        text_jobtitle = new javax.swing.JTextField();
        btn_postApplication = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_backpage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/backicon.jpeg"))); // NOI18N
        btn_backpage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backpageActionPerformed(evt);
            }
        });
        add(btn_backpage, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 100, 90));

        lblHeader.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Publish Jobs");
        add(lblHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, 280, 26));

        tblJobs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Country", "State", "City", "Trust", "Job Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblJobs.setMinimumSize(new java.awt.Dimension(375, 0));
        tblScrollPane.setViewportView(tblJobs);

        add(tblScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 500, 190));

        btn_deletejobs.setBackground(new java.awt.Color(255, 255, 255));
        btn_deletejobs.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        btn_deletejobs.setText("Delete Job");
        btn_deletejobs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deletejobsActionPerformed(evt);
            }
        });
        add(btn_deletejobs, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 320, 120, 30));

        label_jobtitle.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_jobtitle.setText("Job Title:");
        add(label_jobtitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 400, -1, -1));

        text_jobtitle.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        text_jobtitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_jobtitleActionPerformed(evt);
            }
        });
        add(text_jobtitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 400, 150, -1));

        btn_postApplication.setBackground(new java.awt.Color(255, 255, 255));
        btn_postApplication.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        btn_postApplication.setText("Submit");
        btn_postApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_postApplicationActionPerformed(evt);
            }
        });
        add(btn_postApplication, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 450, 90, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backpageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backpageActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btn_backpageActionPerformed

    private void btn_deletejobsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deletejobsActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblJobs.getSelectedRow();
        if (selectedRow >= 0) {
            int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the Job?", "Warning", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Job job = (Job) tblJobs.getValueAt(selectedRow, 4);

                system.getJobDirectory().removeJob(job);
                populateTable();
                JOptionPane.showMessageDialog(null, "Job deleted successfully", "Warning", JOptionPane.WARNING_MESSAGE);

            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_deletejobsActionPerformed

    private void btn_postApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_postApplicationActionPerformed
        // TODO add your handling code here:
        String name = text_jobtitle.getText();
        if (!name.equals("")) {

            // validate name
            String regex = "^[a-z A-Z]+$";
            Pattern namePattern = Pattern.compile(regex);
            Matcher nameMatcher = namePattern.matcher(name);

            if (!nameMatcher.matches()) {
                JOptionPane.showMessageDialog(null, "Invalid characters in job title", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            if(name.equalsIgnoreCase("Manager") || name.equalsIgnoreCase("Coordinator")){
                for (Country c : system.getNetworkList()) {
                    for (State s : c.getStateList()) {
                        for (City cy : s.getCityList()) {
                            for (Enterprise e : cy.getEnterpriseDirectory().getEnterpriseList()) {
                                for (UserAccount ua : e.getUserAccountDirectory().getUserAccountList()) {
                                    if (ua.getUsername().equals(userAccount.getUsername())) {
                                        Job job = jobDirectory.createJob(name);
                                        job.setEnterprise(e);
                                    }
                                }
                            }
                        }
                    }
                }
            }else{
                JOptionPane.showMessageDialog(null, "Job can be posted for 'Manager' or 'Coordinator' position only", "Info", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            populateTable();
            text_jobtitle.setText("");
            JOptionPane.showMessageDialog(null, "Job posted successfully", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Please enter text", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_postApplicationActionPerformed

    private void text_jobtitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_jobtitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_jobtitleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_backpage;
    private javax.swing.JButton btn_deletejobs;
    private javax.swing.JButton btn_postApplication;
    private javax.swing.JLabel label_jobtitle;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JTable tblJobs;
    private javax.swing.JScrollPane tblScrollPane;
    private javax.swing.JTextField text_jobtitle;
    // End of variables declaration//GEN-END:variables
}
