/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.GuestWorkArea;

import Healthplus.E_System;
import Healthplus.Enterprises.Enterprise;
import Healthplus.Network.City;
import Healthplus.Network.Country;
import Healthplus.Network.State;
import Healthplus.Org.ManagerOrg;
import Healthplus.Org.Org;
import Healthplus.UserAccount.UserAccount;
import Healthplus.WorkQueue.IssueWorkRequest;
import Healthplus.WorkQueue.JobWorkRequest;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


public class RaiseIssueWorkRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private E_System system;
    private UserAccount userAccount;
    private String issue;
    
    /**
     * Creates new form RaiseIssueWorkRequestJPanel
     */
    public RaiseIssueWorkRequestJPanel(JPanel userProcessContainer, UserAccount userAccount, String issue, E_System system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.userAccount = userAccount;
        this.issue = issue;
        populateCountry();
        populateState();
        populateCity();
        populateTrust();
    }

     private void populateCountry(){
        
         combo_country.removeAllItems();
        
        for (Country c : system.getNetworkList()){
            combo_country.addItem(c);
        }
        
    }
     
    private void populateState(){
        
        combo_state.removeAllItems();
        if(combo_country.getSelectedItem() != null){
           for (Country c : system.getNetworkList()){
            if(c.equals(combo_country.getSelectedItem())){
                  for(State s: c.getStateList()){
                        combo_state.addItem(s);
                    }
            }
                  
        }
        }
       
        
    }
    
    private void populateCity(){
        
         combo_city.removeAllItems();
         
       if (combo_state.getSelectedItem() != null){
        for (Country c : system.getNetworkList()){
            for(State s: c.getStateList()){
                if(s.equals(combo_state.getSelectedItem())){
                    for(City city :  s.getCityList()){
                    combo_city.addItem(city);
                     }
                }    
            }
        }
       } 
    }
    
     private void populateTrust(){
        
         combo_trust.removeAllItems();
         
        if (combo_city.getSelectedItem() != null){
        for (Country c : system.getNetworkList()){
            for(State s: c.getStateList()){
                for(City city :  s.getCityList()){
                     if(city.equals(combo_city.getSelectedItem())){
                          for(Enterprise e: city.getEnterpriseDirectory().getEnterpriseList()){
                              if(e.getEnterpriseType().getValue().equals("Trust")){
                                combo_trust.addItem(e);
                              }
                             }
                     }
                }
            }
        }
       }  
    }
     
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        label_description = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        text_description = new javax.swing.JTextArea();
        btn_sendrequest = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        combo_trust = new javax.swing.JComboBox();
        combo_country = new javax.swing.JComboBox();
        combo_city = new javax.swing.JComboBox();
        combo_state = new javax.swing.JComboBox();
        label_country = new javax.swing.JLabel();
        label_state = new javax.swing.JLabel();
        label_city = new javax.swing.JLabel();
        label_trust = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 229, 208));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHeader.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Raise Issue");
        add(lblHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 370, 26));

        label_description.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_description.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_description.setText("Description:");
        add(label_description, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 109, 30));

        text_description.setColumns(20);
        text_description.setLineWrap(true);
        text_description.setRows(5);
        text_description.setToolTipText("");
        text_description.setWrapStyleWord(true);
        jScrollPane.setViewportView(text_description);

        add(jScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 419, -1));

        btn_sendrequest.setBackground(new java.awt.Color(255, 255, 255));
        btn_sendrequest.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        btn_sendrequest.setText("Request");
        btn_sendrequest.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn_sendrequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sendrequestActionPerformed(evt);
            }
        });
        add(btn_sendrequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 460, 95, -1));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/backicon.jpeg"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 100, 80));

        combo_trust.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        combo_trust.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(combo_trust, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, 150, -1));

        combo_country.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        combo_country.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_country.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_countryActionPerformed(evt);
            }
        });
        add(combo_country, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, 150, -1));

        combo_city.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        combo_city.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_cityActionPerformed(evt);
            }
        });
        add(combo_city, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 150, -1));

        combo_state.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        combo_state.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_state.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_stateActionPerformed(evt);
            }
        });
        add(combo_state, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, 150, -1));

        label_country.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_country.setText("Country:");
        add(label_country, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, -1, 20));

        label_state.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_state.setText("State:");
        add(label_state, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, -1, 20));

        label_city.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_city.setText("City:");
        add(label_city, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, -1, 20));

        label_trust.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        label_trust.setText("Trust:");
        add(label_trust, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btn_sendrequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sendrequestActionPerformed
        // TODO add your handling code here:
     
       // String country="", state="", city="";
        Enterprise enterprise = (Enterprise) combo_trust.getSelectedItem();
                
        Country country= (Country) combo_country.getSelectedItem();
        String countryStr = country.toString();
        State state = (State) combo_state.getSelectedItem();
        String stateStr = state.toString();
        City city = (City) combo_city.getSelectedItem();
        String cityStr = city.toString();
        String desc = text_description.getText();
        
        if(desc.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter description", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
         // validate text
        String regex = "^[a-z A-Z 0-9 \n]+$";
        Pattern namePattern = Pattern.compile(regex);
        Matcher nameMatcher = namePattern.matcher(desc);
        
        if(!nameMatcher.matches()){
             JOptionPane.showMessageDialog(null, "Invalid characters in description", "Warning", JOptionPane.WARNING_MESSAGE);
             return;
        }
    
        IssueWorkRequest request = new IssueWorkRequest();
        request.setCity(cityStr);
        request.setState(stateStr);
        request.setCountry(countryStr);
        request.setDescription(desc);
        request.setType(issue);
        request.setSender(userAccount);
        request.setStatus("Sent");
        
        Org org = null;
        for (Org organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof ManagerOrg){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
        text_description.setText("");
        JOptionPane.showMessageDialog(null, "Request submitted successfully", "Information", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btn_sendrequestActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void combo_countryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_countryActionPerformed
        // TODO add your handling code here:
        populateState();
    }//GEN-LAST:event_combo_countryActionPerformed

    private void combo_stateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_stateActionPerformed
        // TODO add your handling code here:
         populateCity();
    }//GEN-LAST:event_combo_stateActionPerformed

    private void combo_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_cityActionPerformed
        // TODO add your handling code here:
         populateTrust();
    }//GEN-LAST:event_combo_cityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btn_sendrequest;
    private javax.swing.JComboBox combo_city;
    private javax.swing.JComboBox combo_country;
    private javax.swing.JComboBox combo_state;
    private javax.swing.JComboBox combo_trust;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel label_city;
    private javax.swing.JLabel label_country;
    private javax.swing.JLabel label_description;
    private javax.swing.JLabel label_state;
    private javax.swing.JLabel label_trust;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JTextArea text_description;
    // End of variables declaration//GEN-END:variables
}
